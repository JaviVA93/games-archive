---
import BackSvg from "../../../components/Assets/BackSvg.astro";
import MetacriticSvg from "../../../components/Assets/MetacriticSvg.astro";
import { Image } from "@astrojs/image/components";
import * as gamesData from "../../../data.json";

export function getStaticPaths() {
    return gamesData.games.map((g) => {
        params: {
            slug: g.slug;
        }
    });
}

const { slug } = Astro.params;
const gameData = gamesData.games.find((g) => g.slug === slug);
if (!gameData) return;
const {
    name,
    background_image,
    metacritic,
    description_raw,
    released,
    platforms,
    screenshots,
} = gameData;

const platformsName = platforms.map((p: any) => p.platform.name);
const platformsNameStr = platformsName.join(", ");
---

<main class="gamePage">
    <header>
        <a href="/">
            <BackSvg color="#FF7D00" />
            <span> Back to Home</span>
        </a>
        <h1>{name}</h1>
    </header>
    <div class="imagesContainer">
        <Image
            class="mainImage"
            src={background_image}
            alt=`${name} image`
            style={`view-transition-name: game-${slug}`}
            width={900}
            height={500}
            aspectRatio={2560 / 1440}
        />
        <div class="gameScreenshots">
            <Image
                src={screenshots.results[0].image}
                alt=`${name} screenshot 1`
                width={900}
                height={500}
                aspectRatio={2560 / 1440}
            />
            <Image
                src={screenshots.results[1].image}
                alt=`${name} screenshot 2`
                width={900}
                height={500}
                aspectRatio={2560 / 1440}
            />
            <!-- <img
                src={screenshots.results[2].image}
                alt=`${name} screenshot 3`
                data-pos="3"
            /> -->
            <Image
                src={screenshots.results[2].image}
                alt=`${name} screenshot 3`
                width={900}
                height={500}
                aspectRatio={2560 / 1440}
            />
        </div>
    </div>
    <div class="gameContentWrapper">
        <ul class="gameData">
            <li>
                <span class="dataName">Metacritic:</span>
                <div style="display: flex; align-items: center; gap: 5px;">
                    <span class="dataValue">{metacritic}</span>
                    <MetacriticSvg className="metacriticSvg" />
                </div>
            </li>
            <li>
                <span class="dataName">Released:</span>
                <span class="dataValue">{released}</span>
            </li>
            <li>
                <span class="dataName">Platforms:</span>
                <span class="dataValue">{platformsNameStr}</span>
            </li>
        </ul>
        <div class="gameDescription">
            {description_raw}
        </div>
    </div>
</main>

<style is:inline>
    .gamePage {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin: auto;
        padding: clamp(10px, 2.32px + 1.81vw, 24px);
        max-width: 1200px;
    }
    .gamePage header {
        display: flex;
        align-items: center;
        gap: 15px;
        width: 100%;
        justify-content: center;
        margin-bottom: 21px;
        overflow: hidden;

        view-transition-name: game-page-header;
    }
    .gamePage header a {
        display: flex;
        align-items: center;
        gap: 4px;
        text-decoration: none;
        color: var(--color-4);
        transition: transform 0.5s;
    }

    .gamePage header a:hover {
        transform: translateX(-10px);
    }
    .gamePage header a > span {
        white-space: nowrap;
    }
    .gamePage header h1 {
        margin: 0;
        color: var(--color-3);
    }

    .imagesContainer {
        display: grid;
        grid-template-columns: 80% 20%;
        gap: 15px;
        max-height: 500px;
    }

    .imagesContainer .mainImage {
        max-width: 100%;
        object-fit: cover;
        object-position: center;
        border-radius: 8px;
    }

    .gameScreenshots {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-around;
        view-transition-name: screenshots-wrapper;
    }

    .gameScreenshots img {
        width: 100%;
        height: auto;
        object-fit: cover;
        object-position: center;
        transition: all 0.25s;
        border-radius: 5px;
    }

    .gameContentWrapper {
        width: 100%;
        display: grid;
        grid-template-columns: calc(20% - 20px) calc(80% - 20px);
        gap: 40px;
        margin-top: 20px;
    }

    .gameData {
        list-style-type: none;
        padding: 0;
        margin: 0;
        display: flex;
        flex-direction: column;
        gap: 10px;
        margin-top: 22px;
    }

    .gameData li {
        display: flex;
        align-items: flex-start;
        gap: 5px;
    }

    .gameData li .dataValue {
        color: var(--color-2);
    }
    .gameData li .dataName {
        color: var(--color-5);
    }

    .metacriticSvg {
        width: 20px;
        height: 20px;
    }

    .gameDescription {
        max-width: 650px;
        white-space: pre-line;
    }

    .gameDescription p:nth-child(1) {
        margin-top: 0;
    }

    .imageModal {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.7);
        display: grid;
        place-items: center;
    }

    .hidden {
        display: none;
    }

    .closeModalBtn {
        position: absolute;
        top: 0;
        right: 0;
        background-color: transparent;
        border: 0;
    }

    @media screen and (max-width: 950px) {
        .imagesContainer {
            grid-template-columns: 100%;
        }
        .gameScreenshots {
            flex-direction: row;
            gap: 4px;
        }
        .gameScreenshots img {
            max-width: 32%;
            max-height: unset;
        }
        .gameContentWrapper {
            grid-template-columns: 100%;
            gap: 15px;
        }
    }

    @media screen and (max-width: 760px) {
        .gamePage header a:hover {
            transform: translateX(-5px);
        }
        .gamePage header a > span {
            display: none;
        }
    }
</style>
